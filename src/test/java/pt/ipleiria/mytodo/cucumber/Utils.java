package pt.ipleiria.mytodo.cucumber;

import java.io.FileReader;
import java.lang.Exception;
import java.lang.String;
import java.net.URL;
import java.util.Arrays;
import java.util.Iterator;
import java.util.Map;
import java.util.concurrent.TimeUnit;
import java.util.function.Function;

import io.appium.java_client.android.AndroidDriver;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.openqa.selenium.Keys;
import org.openqa.selenium.remote.DesiredCapabilities;

/**
 * This class was automatically generated by TestProject
 * Adds various utilities used by TestProject generated tests
 */
public class Utils {
  /**
   * Adds a pause before/after steps based on test and step-specific settings.
   */
  public static void sleep(int milliseconds) throws Exception {
    try {
      TimeUnit.MILLISECONDS.sleep(milliseconds);
    }
    catch (Exception e) {
      throw new Exception("Pause between steps was interrupted", e);
    }
  }

  /**
   * Converts an array of comma-separated keys (e.g. TAB) for use by sendKeys() method.
   * See https://goo.gl/jg18sk for the full list of keys
   */
  public static Keys[] getKeys(String keyString) {
    String[] keyArray = keyString.split(",");
    Function<String, Keys> func = s -> Keys.valueOf(s);
    return Arrays.stream(keyArray).map(func).toArray(Keys[]::new);
  }


  public static AndroidDriver setUp(String conf, int env) throws Exception {
    JSONParser parser = new JSONParser();
    JSONObject config = (JSONObject) parser.parse(new FileReader(conf));
    JSONArray envs = (JSONArray) config.get("environments");

    DesiredCapabilities capabilities = new DesiredCapabilities();

    Map<String, String> envCapabilities = (Map<String, String>) envs.get(env); //selecting device index
    Iterator it = envCapabilities.entrySet().iterator();
    while (it.hasNext()) {
      Map.Entry pair = (Map.Entry)it.next();
      capabilities.setCapability(pair.getKey().toString(), pair.getValue().toString());
    }

    Map<String, String> commonCapabilities = (Map<String, String>) config.get("capabilities");
    it = commonCapabilities.entrySet().iterator();
    while (it.hasNext()) {
      Map.Entry pair = (Map.Entry)it.next();
      if(capabilities.getCapability(pair.getKey().toString()) == null){
        capabilities.setCapability(pair.getKey().toString(), pair.getValue().toString());
      }
    }

    String username = System.getenv("BROWSERSTACK_USERNAME");
    if(username == null) {
      username = (String) config.get("username");
    }

    String accessKey = System.getenv("BROWSERSTACK_ACCESS_KEY");
    if(accessKey == null) {
      accessKey = (String) config.get("access_key");
    }

    String app = System.getenv("BROWSERSTACK_APP_ID");
    if(app != null && !app.isEmpty()) {
      capabilities.setCapability("app", app);
    }

    return new AndroidDriver(new URL("http://"+username+":"+accessKey+"@"+config.get("server")+"/wd/hub"), capabilities);
  }

}
